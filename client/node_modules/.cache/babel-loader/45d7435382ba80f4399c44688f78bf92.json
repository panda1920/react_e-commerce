{"ast":null,"code":"var _jsxFileName = \"C:\\\\Myprojects\\\\React\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebaseutils\";\nimport { updateCollections } from '../../redux/shop/shop.actions';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const colletctionRef = firestore.collection('collection');\n    colletctionRef.onSnapshot(async snapshot => {\n      const collections = convertCollectionSnapshotToMap(snapshot);\n      const updateCollections = this.props.updateCollections;\n      updateCollections(collections);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Myprojects/React/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","WithSpinner","firestore","convertCollectionSnapshotToMap","updateCollections","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","constructor","unsubscribeFromSnapshot","state","isLoading","componentDidMount","colletctionRef","collection","onSnapshot","snapshot","collections","props","setState","loading","render","match","path","mapDispatchToProps","dispatch","collectionMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,8BAA1D;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGL,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,GAAG;AACZ;AADY,SAQdC,uBARc,GAQY,IARZ;AAGZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,cAAc,GAAGZ,SAAS,CAACa,UAAV,CAAqB,YAArB,CAAvB;AACAD,IAAAA,cAAc,CAACE,UAAf,CAA0B,MAAOC,QAAP,IAAoB;AAC5C,YAAMC,WAAW,GAAGf,8BAA8B,CAACc,QAAD,CAAlD;AAD4C,YAGpCb,iBAHoC,GAGd,KAAKe,KAHS,CAGpCf,iBAHoC;AAI5CA,MAAAA,iBAAiB,CAACc,WAAD,CAAjB;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAND;AAOD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKJ,KADhB,CACCI,KADD;AAAA,UAECX,SAFD,GAEe,KAAKD,KAFpB,CAECC,SAFD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKW,KAAK,CAACC,IAAX,CAAjB;AACE,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEP;AAA3C,SAA0DO,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKI,KAAK,CAACC,IAAX,mBAAX;AACE,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEP;AAAtC,SAAqDO,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAUD;;AAnCoC;;AAsCvC,SAASM,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLtB,IAAAA,iBAAiB,EAAGuB,aAAD,IAAmBD,QAAQ,CAAEtB,iBAAiB,CAACuB,aAAD,CAAnB;AADzC,GAAP;AAGD;;AAED,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkClB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebaseutils\";\r\n\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    \r\n    this.state = {\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    const colletctionRef = firestore.collection('collection');\r\n    colletctionRef.onSnapshot(async (snapshot) => {\r\n      const collections = convertCollectionSnapshotToMap(snapshot);\r\n\r\n      const { updateCollections } = this.props;\r\n      updateCollections(collections);\r\n      this.setState({ loading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props\r\n    const { isLoading } = this.state;\r\n    return (\r\n      <div className='shop-page'>\r\n        <Route exact path={`${match.path}`}\r\n          render={(props) => <CollectionsOverviewWithSpinner isLoading={isLoading} {...props} />}\r\n        />\r\n        <Route path={`${match.path}/:collectionId`}\r\n          render={(props) => <CollectionPageWithSpinner isLoading={isLoading} {...props} />}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    updateCollections: (collectionMap) => dispatch( updateCollections(collectionMap) )\r\n  };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}