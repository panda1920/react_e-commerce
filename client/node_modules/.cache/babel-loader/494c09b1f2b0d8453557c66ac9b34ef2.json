{"ast":null,"code":"var _jsxFileName = \"C:\\\\Myprojects\\\\React\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSigninStart, emailSigninStart } from '../../redux/user/user.action';\n\nclass SignIn extends React.Component {\n  constructor() {\n    super();\n\n    this.submitHandler = async event => {\n      event.preventDefault();\n      const emailSigninStart = this.props.emailSigninStart;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      emailSigninStart({\n        email,\n        password\n      });\n      this.setState({\n        email: '',\n        password: ''\n      });\n    };\n\n    this.changeHandler = event => {\n      let _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n      this.setState({\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSigninStart = this.props.googleSigninStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"I have account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      label: \"email\",\n      handleChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      label: \"password\",\n      handleChange: this.changeHandler,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \" Sign in \"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSigninStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" Sign In With Google \"))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    googleSigninStart: () => dispatch(googleSigninStart()),\n    emailSigninStart: (email, password) => dispatch(emailSigninStart({\n      email,\n      password\n    }))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Myprojects/React/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","googleSigninStart","emailSigninStart","SignIn","Component","constructor","submitHandler","event","preventDefault","props","state","email","password","setState","changeHandler","target","value","name","console","log","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSigninStart, emailSigninStart } from '../../redux/user/user.action';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n    }\r\n  }\r\n\r\n  submitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { emailSigninStart } = this.props;\r\n    const { email, password } = this.state;\r\n    emailSigninStart({ email, password });\r\n\r\n    this.setState({ email: '', password: '' });\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    let {value, name} = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    }, () => console.log(this.state));\r\n  }\r\n\r\n  render() {\r\n    const { googleSigninStart } = this.props;\r\n    return (\r\n      <div className='sign-in'>\r\n        <h2>I have account</h2>\r\n        <span>Sign in with your email and password</span>\r\n\r\n        <form onSubmit={this.submitHandler}>\r\n          <FormInput\r\n            name='email'\r\n            type='email'\r\n            value={this.state.email}\r\n            label='email'\r\n            handleChange={this.changeHandler}\r\n            required\r\n          />\r\n          <FormInput\r\n            name='password'\r\n            type='password'\r\n            value={this.state.password}\r\n            label='password'\r\n            handleChange={this.changeHandler}\r\n            required\r\n          />\r\n          <div className='buttons'>\r\n            <CustomButton type='submit'> Sign in </CustomButton>\r\n            <CustomButton type='button' onClick={googleSigninStart} isGoogleSignIn> Sign In With Google </CustomButton>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    googleSigninStart: () => dispatch(googleSigninStart()),\r\n    emailSigninStart: (email, password) => dispatch(emailSigninStart({ email, password })),\r\n  };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}