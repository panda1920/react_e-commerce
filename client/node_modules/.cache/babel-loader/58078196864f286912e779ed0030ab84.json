{"ast":null,"code":"var _jsxFileName = \"C:\\\\Myprojects\\\\React\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebaseutils\";\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const colletctionRef = firestore.collection('collection');\n    colletctionRef.onSnapshot(async snapshot => {\n      const collections = convertCollectionSnapshotToMap(snapshot);\n      const updateCollections = this.props.updateCollections;\n      updateCollections(collections);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Myprojects/React/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","WithSpinner","CollectionPage","firestore","convertCollectionSnapshotToMap","updateCollections","ShopPage","Component","constructor","unsubscribeFromSnapshot","state","isLoading","componentDidMount","colletctionRef","collection","onSnapshot","snapshot","collections","props","render","match","path","mapDispatchToProps","dispatch","collectionMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,8BAA1D;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,GAAG;AACZ;AADY,SAQdC,uBARc,GAQY,IARZ;AAGZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,cAAc,GAAGV,SAAS,CAACW,UAAV,CAAqB,YAArB,CAAvB;AACAD,IAAAA,cAAc,CAACE,UAAf,CAA0B,MAAOC,QAAP,IAAoB;AAC5C,YAAMC,WAAW,GAAGb,8BAA8B,CAACY,QAAD,CAAlD;AAD4C,YAGpCX,iBAHoC,GAGd,KAAKa,KAHS,CAGpCb,iBAHoC;AAI5CA,MAAAA,iBAAiB,CAACY,WAAD,CAAjB;AACD,KALD;AAMD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKF,KADhB,CACCE,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAErB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKoB,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAEnB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA7BoC;;AAgCvC,SAASoB,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLlB,IAAAA,iBAAiB,EAAGmB,aAAD,IAAmBD,QAAQ,CAAElB,iBAAiB,CAACmB,aAAD,CAAnB;AADzC,GAAP;AAGD;;AAED,eAAezB,OAAO,CAAC,IAAD,EAAOuB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebaseutils\";\r\n\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\n\r\nclass ShopPage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    \r\n    this.state = {\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    const colletctionRef = firestore.collection('collection');\r\n    colletctionRef.onSnapshot(async (snapshot) => {\r\n      const collections = convertCollectionSnapshotToMap(snapshot);\r\n\r\n      const { updateCollections } = this.props;\r\n      updateCollections(collections);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props\r\n    return (\r\n      <div className='shop-page'>\r\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n        <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    updateCollections: (collectionMap) => dispatch( updateCollections(collectionMap) )\r\n  };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}