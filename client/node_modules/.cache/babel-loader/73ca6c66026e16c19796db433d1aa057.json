{"ast":null,"code":"import _slicedToArray from \"C:\\\\Myprojects\\\\React\\\\crwn-clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Myprojects\\\\React\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSigninStart, emailSigninStart } from '../../redux/user/user.action';\n\nfunction SignIn({\n  googleSigninStart\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    const emailSigninStart = this.props.emailSigninStart;\n    emailSigninStart(this.state);\n    this.setState({\n      email: '',\n      password: ''\n    });\n  };\n\n  const changeHandler = event => {\n    let _event$target = event.target,\n        value = _event$target.value,\n        name = _event$target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"I have account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: this.state.email,\n    label: \"email\",\n    handleChange: changeHandler,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: this.state.password,\n    label: \"password\",\n    handleChange: this.changeHandler,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \" Sign in \"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSigninStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" Sign In With Google \"))));\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    googleSigninStart: () => dispatch(googleSigninStart()),\n    emailSigninStart: ({\n      email,\n      password\n    }) => dispatch(emailSigninStart({\n      email,\n      password\n    }))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Myprojects/React/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSigninStart","emailSigninStart","SignIn","email","setEmail","password","setPassword","submitHandler","event","preventDefault","props","state","setState","changeHandler","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { googleSigninStart, emailSigninStart } from '../../redux/user/user.action';\r\n\r\nfunction SignIn({ googleSigninStart }) {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { emailSigninStart } = this.props;\r\n    emailSigninStart(this.state);\r\n\r\n    this.setState({ email: '', password: '' });\r\n  }\r\n\r\n  const changeHandler = (event) => {\r\n    let {value, name} = event.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className='sign-in'>\r\n      <h2>I have account</h2>\r\n      <span>Sign in with your email and password</span>\r\n\r\n      <form onSubmit={submitHandler}>\r\n        <FormInput\r\n          name='email'\r\n          type='email'\r\n          value={this.state.email}\r\n          label='email'\r\n          handleChange={changeHandler}\r\n          required\r\n        />\r\n        <FormInput\r\n          name='password'\r\n          type='password'\r\n          value={this.state.password}\r\n          label='password'\r\n          handleChange={this.changeHandler}\r\n          required\r\n        />\r\n        <div className='buttons'>\r\n          <CustomButton type='submit'> Sign in </CustomButton>\r\n          <CustomButton type='button' onClick={googleSigninStart} isGoogleSignIn> Sign In With Google </CustomButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    googleSigninStart: () => dispatch(googleSigninStart()),\r\n    emailSigninStart: ({ email, password }) => dispatch(emailSigninStart({ email, password })),\r\n  };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}