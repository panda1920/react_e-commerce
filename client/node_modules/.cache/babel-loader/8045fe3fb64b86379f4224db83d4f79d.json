{"ast":null,"code":"import _objectSpread from \"C:\\\\Myprojects\\\\React\\\\crwn-clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Myprojects\\\\React\\\\crwn-clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Myprojects\\\\React\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-up.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signupStart } from '../../redux/user/user.action';\n\nfunction SignUp({\n  signupStart\n}) {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        signupInfo = _useState2[0],\n        setSignupInfo = _useState2[1];\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (signupInfo.password !== confirmPassword) {\n      alert('Password does not match.');\n      return;\n    }\n\n    signupStart(signupInfo);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setSignupInfo(_objectSpread({}, signupInfo, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    handleChange: this.handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    handleChange: this.handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    handleChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    handleChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Sign up\")));\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    signupStart: userInfo => dispatch(signupStart(userInfo))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Myprojects/React/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signupStart","SignUp","displayName","email","password","confirmPassword","signupInfo","setSignupInfo","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","userInfo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { signupStart } from '../../redux/user/user.action';\r\n\r\n\r\nfunction SignUp({ signupStart }) {\r\n\r\n  const [signupInfo, setSignupInfo] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n  })\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (signupInfo.password !== confirmPassword) {\r\n      alert('Password does not match.');\r\n      return;\r\n    }\r\n\r\n    signupStart(signupInfo);\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setSignupInfo({\r\n      ...signupInfo,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className='sign-up'>\r\n      <h2 className='title'>I do not have an account</h2>\r\n      <span>Sign up with your email and password</span>\r\n      <form className='sign-up-form' onSubmit={this.handleSubmit}>\r\n        <FormInput\r\n          type='text'\r\n          name='displayName'\r\n          value={displayName}\r\n          handleChange={this.handleChange}\r\n          label='Display Name'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='email'\r\n          name='email'\r\n          value={email}\r\n          handleChange={this.handleChange}\r\n          label='Email'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='password'\r\n          value={password}\r\n          handleChange={this.handleChange}\r\n          label='Password'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='confirmPassword'\r\n          value={confirmPassword}\r\n          handleChange={this.handleChange}\r\n          label='Confirm Password'\r\n          required\r\n        />\r\n        <CustomButton type='submit'>Sign up</CustomButton>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    signupStart: (userInfo) => dispatch(signupStart(userInfo))\r\n  };\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}