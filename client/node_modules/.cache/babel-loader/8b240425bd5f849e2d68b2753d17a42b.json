{"ast":null,"code":"import _objectSpread from \"C:\\\\Myprojects\\\\React\\\\crwn-clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { signinSuccess, signinFailure, signoutSuccess, signoutFailure, signupSuccess, signupFailure } from './user.action';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebaseutils';\nexport function* userRootSaga() {\n  yield all([call(onGoogleSigninStart), call(onEmailSigninStart), call(onCheckUserSession), call(onSignoutStart), call(onSignupStart)]);\n}\nexport function* onGoogleSigninStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          userAuth = _ref.user;\n\n    yield signInWithUserAuth(userAuth);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\nexport function* onEmailSigninStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          userAuth = _ref2.user;\n\n    yield signInWithUserAuth(userAuth);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    console.log(userAuth);\n    if (!userAuth) return;\n    yield signInWithUserAuth(userAuth);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\nexport function* onSignoutStart() {\n  yield takeLatest(userActionTypes.SIGNOUT_START, signout);\n}\nexport function* signout() {\n  try {\n    yield auth.signOut();\n    yield put(signoutSuccess());\n  } catch (error) {\n    yield put(signoutFailure(error));\n  }\n}\nexport function* signInWithUserAuth(userAuth) {\n  try {\n    const userRef = yield createUserProfileDocument(userAuth);\n    const userSnapshot = yield userRef.get();\n    console.log(userSnapshot);\n    console.log(userSnapshot.exists);\n    yield put(signinSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\nexport function* onSignupStart() {\n  yield takeLatest(userActionTypes.SIGNUP_START, signup);\n}\nexport function* signup({\n  payload: userInfo\n}) {\n  try {\n    const displayName = userInfo.displayName,\n          email = userInfo.email,\n          password = userInfo.password;\n    const userAuth = yield auth.createUserWithEmailAndPassword(email, password);\n    const userRef = yield createUserProfileDocument(userAuth, {\n      displayName\n    });\n    const snapshot = userRef.get();\n    console.log(snapshot);\n    return;\n    yield put(signupSuccess());\n    yield signInWithUserAuth(userAuth);\n  } catch (error) {\n    yield put(signupFailure(error));\n  }\n}","map":{"version":3,"sources":["C:/Myprojects/React/crwn-clothing/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","signinSuccess","signinFailure","signoutSuccess","signoutFailure","signupSuccess","signupFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","userRootSaga","onGoogleSigninStart","onEmailSigninStart","onCheckUserSession","onSignoutStart","onSignupStart","GOOGLE_SIGNIN_START","signInWithGoogle","signInWithPopup","userAuth","user","signInWithUserAuth","error","EMAIL_SIGNIN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","CHECK_USER_SESSION","isUserAuthenticated","console","log","SIGNOUT_START","signout","signOut","userRef","userSnapshot","get","exists","id","data","SIGNUP_START","signup","userInfo","displayName","createUserWithEmailAndPassword","snapshot"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport userActionTypes from './user.types';\r\nimport {\r\n  signinSuccess,\r\n  signinFailure,\r\n  signoutSuccess,\r\n  signoutFailure,\r\n  signupSuccess,\r\n  signupFailure,\r\n} from './user.action';\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n} from '../../firebase/firebaseutils';\r\n\r\nexport function* userRootSaga() {\r\n  yield all([\r\n    call(onGoogleSigninStart),\r\n    call(onEmailSigninStart),\r\n    call(onCheckUserSession),\r\n    call(onSignoutStart),\r\n    call(onSignupStart),\r\n  ]);\r\n}\r\n\r\nexport function* onGoogleSigninStart() {\r\n  yield takeLatest(userActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user: userAuth } = yield auth.signInWithPopup(googleProvider);\r\n    yield signInWithUserAuth(userAuth);\r\n  }\r\n  catch (error) {\r\n    yield put( signinFailure(error) );\r\n  }\r\n}\r\n\r\nexport function* onEmailSigninStart() {\r\n  yield takeLatest(userActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\r\n}\r\n\r\nexport function* signInWithEmail({ payload: {email, password} }) {\r\n  try {\r\n    const { user: userAuth } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield signInWithUserAuth(userAuth);\r\n  } catch(error) {\r\n    yield put( signinFailure(error) );\r\n  }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    console.log(userAuth);\r\n    if (!userAuth)\r\n      return;\r\n    yield signInWithUserAuth(userAuth);\r\n  } catch(error) {\r\n    yield put( signinFailure(error) );\r\n  }\r\n}\r\n\r\nexport function* onSignoutStart() {\r\n  yield takeLatest(userActionTypes.SIGNOUT_START, signout);\r\n}\r\n\r\nexport function* signout() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put( signoutSuccess() );\r\n  } catch(error) {\r\n    yield put( signoutFailure(error) );\r\n  }\r\n}\r\n\r\nexport function* signInWithUserAuth(userAuth) {\r\n  try {\r\n    const userRef = yield createUserProfileDocument(userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n    console.log(userSnapshot);\r\n    console.log(userSnapshot.exists);\r\n    yield put( signinSuccess({ id: userSnapshot.id, ...userSnapshot.data()}) );\r\n  } catch(error) {\r\n    yield put( signinFailure(error) );\r\n  }\r\n}\r\n\r\nexport function* onSignupStart() {\r\n  yield takeLatest(userActionTypes.SIGNUP_START, signup);\r\n}\r\n\r\nexport function* signup({ payload: userInfo }) {\r\n  try {\r\n    const { displayName, email, password } = userInfo;\r\n    const userAuth = yield auth.createUserWithEmailAndPassword(email, password);\r\n    const userRef = yield createUserProfileDocument(userAuth, { displayName });\r\n    const snapshot = userRef.get();\r\n    console.log(snapshot);\r\n    return;\r\n    yield put( signupSuccess() );\r\n    yield signInWithUserAuth(userAuth);\r\n  } catch(error) {\r\n    yield put( signupFailure(error) );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}