{"ast":null,"code":"import _objectSpread from \"C:\\\\Myprojects\\\\React\\\\crwn-clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { signinSuccess, signinFailure, signoutSuccess, signoutFailure } from './user.action';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebaseutils';\nexport function* userRootSaga() {\n  yield all([call(googleSigninStart), call(emailSigninStart), call(onCheckUserSession), call(onSignoutStart)]);\n}\nexport function* googleSigninStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          userAuth = _ref.user;\n\n    yield signInWithUserAuth(userAuth);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\nexport function* emailSigninStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          userAuth = _ref2.user;\n\n    yield signInWithUserAuth(userAuth);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield signInWithUserAuth(userAuth);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\nexport function* onSignoutStart() {\n  yield takeLatest(userActionTypes.SIGNOUT_START, signout);\n}\nexport function* signout() {\n  try {\n    yield auth.signOut();\n    yield put(signoutSuccess());\n  } catch (error) {\n    yield put(signoutFailure(error));\n  }\n}\nexport function* signInWithUserAuth(userAuth) {\n  try {\n    const userRef = yield createUserProfileDocument(userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signinSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}","map":{"version":3,"sources":["C:/Myprojects/React/crwn-clothing/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","signinSuccess","signinFailure","signoutSuccess","signoutFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","userRootSaga","googleSigninStart","emailSigninStart","onCheckUserSession","onSignoutStart","GOOGLE_SIGNIN_START","signInWithGoogle","signInWithPopup","userAuth","user","signInWithUserAuth","error","EMAIL_SIGNIN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","CHECK_USER_SESSION","isUserAuthenticated","SIGNOUT_START","signout","signOut","userRef","userSnapshot","get","id","data"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport userActionTypes from './user.types';\r\nimport {\r\n  signinSuccess,\r\n  signinFailure,\r\n  signoutSuccess,\r\n  signoutFailure,\r\n} from './user.action';\r\n\r\nimport {\r\n  auth,\r\n  googleProvider,\r\n  createUserProfileDocument,\r\n  getCurrentUser,\r\n} from '../../firebase/firebaseutils';\r\n\r\nexport function* userRootSaga() {\r\n  yield all([\r\n    call(googleSigninStart),\r\n    call(emailSigninStart),\r\n    call(onCheckUserSession),\r\n    call(onSignoutStart),\r\n  ]);\r\n}\r\n\r\nexport function* googleSigninStart() {\r\n  yield takeLatest(userActionTypes.GOOGLE_SIGNIN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user: userAuth } = yield auth.signInWithPopup(googleProvider);\r\n    yield signInWithUserAuth(userAuth);\r\n  }\r\n  catch (error) {\r\n    yield put( signinFailure(error) );\r\n  }\r\n}\r\n\r\nexport function* emailSigninStart() {\r\n  yield takeLatest(userActionTypes.EMAIL_SIGNIN_START, signInWithEmail);\r\n}\r\n\r\nexport function* signInWithEmail({ payload: {email, password} }) {\r\n  try {\r\n    const { user: userAuth } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield signInWithUserAuth(userAuth);\r\n  } catch(error) {\r\n    yield put( signinFailure(error) );\r\n  }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth)\r\n      return;\r\n    yield signInWithUserAuth(userAuth);\r\n  } catch(error) {\r\n    yield put( signinFailure(error) );\r\n  }\r\n}\r\n\r\nexport function* onSignoutStart() {\r\n  yield takeLatest(userActionTypes.SIGNOUT_START, signout);\r\n}\r\n\r\nexport function* signout() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put( signoutSuccess() );\r\n  } catch(error) {\r\n    yield put( signoutFailure(error) );\r\n  }\r\n}\r\n\r\nexport function* signInWithUserAuth(userAuth) {\r\n  try {\r\n    const userRef = yield createUserProfileDocument(userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put( signinSuccess({ id: userSnapshot.id, ...userSnapshot.data()}) );\r\n  } catch(error) {\r\n    yield put( signinFailure(error) );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}