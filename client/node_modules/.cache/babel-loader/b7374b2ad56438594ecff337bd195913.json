{"ast":null,"code":"import _defineProperty from \"C:\\\\Myprojects\\\\React\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport function addItemToCart(cartItems, cartItemToAdd) {\n  const existingCartItem = cartItems.find(item => item.id === cartItemToAdd.id);\n  if (!existingCartItem) return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];else return cartItems.map(item => item.id === cartItemToAdd.id ? _objectSpread({}, item, {\n    quantity: item.quantity + 1\n  }) : item);\n}\nexport function removeItemFromCart(cartItems, cartItemToRemove) {\n  const existingItemCount = cartItems.find(item => item.id === cartItemToRemove.id).quantity;\n}","map":{"version":3,"sources":["C:/Myprojects/React/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","item","id","quantity","map","removeItemFromCart","cartItemToRemove","existingItemCount"],"mappings":";;;;;;AAAA,OAAO,SAASA,aAAT,CAAuBC,SAAvB,EAAkCC,aAAlC,EAAiD;AACtD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,aAAa,CAACI,EADX,CAAzB;AAIA,MAAI,CAACH,gBAAL,EACE,OAAO,CAAC,GAAGF,SAAJ,oBAAmBC,aAAnB;AAAkCK,IAAAA,QAAQ,EAAE;AAA5C,KAAP,CADF,KAGE,OAAON,SAAS,CAACO,GAAV,CACLH,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,aAAa,CAACI,EAA1B,qBACAD,IADA;AACME,IAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAgB;AADhC,OAEJF,IAHC,CAAP;AAKH;AAED,OAAO,SAASI,kBAAT,CAA4BR,SAA5B,EAAuCS,gBAAvC,EAAyD;AAC9D,QAAMC,iBAAiB,GAAGV,SAAS,CAACG,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYI,gBAAgB,CAACJ,EAApD,EAAwDC,QAAlF;AACD","sourcesContent":["export function addItemToCart(cartItems, cartItemToAdd) {\r\n  const existingCartItem = cartItems.find(\r\n    item => item.id === cartItemToAdd.id\r\n  );\r\n\r\n  if (!existingCartItem)\r\n    return [...cartItems, {...cartItemToAdd, quantity: 1}];\r\n  else\r\n    return cartItems.map(\r\n      item => item.id === cartItemToAdd.id\r\n        ? {...item, quantity: item.quantity + 1}\r\n        : item\r\n    );\r\n}\r\n\r\nexport function removeItemFromCart(cartItems, cartItemToRemove) {\r\n  const existingItemCount = cartItems.find(item => item.id === cartItemToRemove.id).quantity;\r\n}"]},"metadata":{},"sourceType":"module"}